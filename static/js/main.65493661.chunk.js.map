{"version":3,"sources":["serviceWorkerRegistration.js","redux/actionTypes.js","redux/reducers/books.js","redux/reducers/queries.js","redux/actions/queries/addQuery.js","redux/actions/books/addBooks.js","redux/actions/books/booksFailed.js","redux/actions/books/booksLoading.js","utils/api.js","redux/selectors/getQuery.js","redux/sagas.js","redux/configureStore.js","components/Home/Home.js","utils/constants.js","icons/NoPhotoIcon.js","components/Book/Book.js","components/BooksList/BooksList.js","components/SearchForm/SearchForm.js","components/Preloader/Preloader.js","components/ErrorText/ErrorText.js","components/DetailedBookView/DetailedBookView.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","API_BOOKS_REQUEST","API_BOOKS_FAILED","API_BOOKS_SUCCEDED","ADD_QUERY","initialState","isLoading","errMess","query","books","Books","action","type","ActionTypes","payload","Queries","addQuery","addBooks","booksFailed","errmess","booksLoading","getBooks","axios","method","url","getQuery","watchInputChange","fetchBooks","rootSaga","takeLatest","select","delay","put","call","Api","data","docs","length","message","all","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","applyMiddleware","run","connect","useState","pageNumber","setPageNumber","visibleBooks","slice","pagesNumber","Math","floor","className","text","onClick","prev","NoPhotoIcon","Book","book","coverUrl","cover_i","to","key","src","alt","title","BooksList","map","item","len","dispatch","onChange","values","handleChange","model","name","id","placeholder","validators","required","val","minLength","maxLength","show","messages","Preloader","ErrorText","useParams","find","isImageLoaded","setImageLoaded","onLoad","author_name","index","first_publish_year","App","onerror","err","exact","path","component","Home","DetailedBookView","rootElement","document","getElementById","ReactDOM","render","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.65493661.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://cra.link/PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then((registration) => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://cra.link/PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then((response) => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then((registration) => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log('No internet connection found. App is running in offline mode.');\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then((registration) => {\r\n          registration.unregister();\r\n        })\r\n        .catch((error) => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }","export const API_BOOKS_REQUEST = \"API_BOOKS_REQUEST\";\r\nexport const API_BOOKS_FAILED = \"API_BOOKS_FAILED\";\r\nexport const API_BOOKS_SUCCEDED = \"API_BOOKS_SUCCEDED\";\r\n\r\nexport const ADD_QUERY = \"ADD_QUERY\";\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst initialState = { isLoading: false, errMess: null, query: \"\", books: [] };\r\n\r\nconst Books = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.API_BOOKS_SUCCEDED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        books: action.payload\r\n      };\r\n\r\n    case ActionTypes.API_BOOKS_REQUEST:\r\n      return { ...state, isLoading: true, errMess: null, books: [] };\r\n\r\n    case ActionTypes.API_BOOKS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Books;\r\n","import * as ActionTypes from \"../actionTypes\";\r\n\r\nconst initialState = { isLoading: false, errMess: null, query: \"\", books: [] };\r\n\r\nconst Queries = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_QUERY:\r\n      return {\r\n        ...state,\r\n        query: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Queries;\r\n","import * as ActionTypes from \"../../actionTypes\";\r\n\r\nconst addQuery = (query) => ({\r\n  type: ActionTypes.ADD_QUERY,\r\n  payload: {\r\n    query: query\r\n  }\r\n});\r\n\r\nexport default addQuery;\r\n","import * as ActionTypes from \"../../actionTypes\";\r\n\r\nconst addBooks = (books) => ({\r\n  type: ActionTypes.API_BOOKS_SUCCEDED,\r\n  payload: books\r\n});\r\n\r\nexport default addBooks;\r\n","import * as ActionTypes from \"../../actionTypes\";\r\n\r\nconst booksFailed = (errmess) => ({\r\n  type: ActionTypes.API_BOOKS_FAILED,\r\n  payload: errmess\r\n});\r\n\r\nexport default booksFailed;\r\n","import * as ActionTypes from \"../../actionTypes\";\r\n\r\nconst booksLoading = () => ({\r\n  type: ActionTypes.API_BOOKS_REQUEST\r\n});\r\n\r\nexport default booksLoading;\r\n","import axios from \"axios\";\r\nconst baseURL = \"https://openlibrary.org\";\r\n\r\nexport const getBooks = (query) => {\r\n  return axios({\r\n    method: \"get\",\r\n    url: `${baseURL}/search.json?title=${query}`\r\n  });\r\n};\r\n","const getQuery = (state) => state.query.query;\r\n\r\nexport default getQuery;\r\n","import { put, takeLatest, all, call, delay, select } from \"redux-saga/effects\";\r\nimport * as ActionTypes from \"./actionTypes\";\r\nimport { addBooks, booksFailed, booksLoading } from \"./actions\";\r\nimport * as Api from \"../utils/api\";\r\nimport getQuery from \"./selectors/getQuery\";\r\n\r\nfunction* watchInputChange() {\r\n  yield takeLatest(ActionTypes.ADD_QUERY, fetchBooks);\r\n}\r\n\r\nfunction* fetchBooks() {\r\n  const query = yield select(getQuery);\r\n  yield delay(1000);\r\n  yield put(booksLoading());\r\n  try {\r\n    let data = yield call(Api.getBooks, query.query);\r\n    data = data.data.docs;\r\n    if (data.length === 0){\r\n      yield put(booksFailed('Ничего не найдено'));\r\n    }\r\n    else yield put(addBooks(data));\r\n  } catch (error) {\r\n    yield put(booksFailed(error.message));\r\n  }\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([watchInputChange()]);\r\n}\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { Books, Queries } from \"./reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  combineReducers({\r\n    books: Books,\r\n    query: Queries\r\n  }),\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","import { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { SearchForm, ErrorText, BooksList, Preloader } from \"../index\";\r\nimport BOOKS_PER_PAGE from '../../utils/constants'\r\nimport \"./Home.css\";\r\n\r\nfunction Home({ isLoading, errMess, books }) {\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const visibleBooks = books.slice(0, BOOKS_PER_PAGE * pageNumber);\r\n  const pagesNumber = Math.floor(books.length / 20);\r\n\r\n  function handleShowMoreBtn() {\r\n    setPageNumber((prev) => prev + 1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <h1 className=\"main__heading\">Поиск книг</h1>\r\n      <SearchForm />\r\n      {isLoading && <Preloader text={true} />}\r\n      {errMess && <ErrorText text={errMess} />}\r\n      {books && books.length !== 0 && !errMess && (\r\n        <BooksList books={visibleBooks} />\r\n      )}\r\n      {pageNumber < pagesNumber && !errMess && (\r\n        <button className=\"main__more-btn\" onClick={handleShowMoreBtn}>\r\n          Показать еще\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    books: state.books.books,\r\n    isLoading: state.books.isLoading,\r\n    errMess: state.books.errMess\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);\r\n","const BOOKS_PER_PAGE = 20;\r\n\r\nexport default BOOKS_PER_PAGE;","import './NoPhotoIcon.css'\n\nconst NoPhotoIcon = () => {\n    return (\n        <div className=\"icon\">\n        </div>)\n}\n\nexport default NoPhotoIcon;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport * as Image from '../../icons';\r\nimport \"./Book.css\";\r\n\r\nfunction Book({ book }) {\r\n  const coverUrl = `http://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg`;\r\n\r\n  return (\r\n    <Link className=\"card\" to={`/book/${book.key.slice(7)}`}>\r\n      <div className=\"card__group\">\r\n        {book.cover_i ? <img className=\"card__image\" src={coverUrl} alt=\"Обложка книги\" /> :\r\n          <Image.NoPhotoIcon />}\r\n        <h2 className=\"card__title\">{book.title}</h2>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\nexport default Book;\r\n","import React from \"react\";\r\nimport { Book } from \"../index\";\r\nimport \"./BooksList.css\";\r\n\r\nconst BooksList = ({ books }) => (\r\n  <div className=\"bookslist\">\r\n    <ul className=\"bookslist__list\">\r\n      {books &&\r\n        books.map((item) => (\r\n          <li className=\"bookslist__item\" key={item.key}>\r\n            <Book book={item} />\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  </div>\r\n);\r\n\r\nexport default BooksList;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { LocalForm, Control, Errors } from \"react-redux-form\";\r\nimport { addQuery } from \"../../redux/actions/index\";\r\nimport \"./SearchForm.css\";\r\n\r\nfunction SearchForm({ dispatch }) {\r\n  const required = (val) => val && val.length;\r\n  const maxLength = (len) => (val) => !val || val.length <= len;\r\n  const minLength = (len) => (val) => val && val.length >= len;\r\n\r\n  function handleChange(values) {\r\n    dispatch(addQuery(values.query));\r\n  }\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <LocalForm\r\n        onChange={(values) => handleChange(values)}\r\n        className=\"search__form\"\r\n      >\r\n        <Control.text\r\n          className=\"search__input\"\r\n          model=\".query\"\r\n          name=\"query\"\r\n          id=\"query\"\r\n          placeholder=\"Введите название книги\"\r\n          validators={{\r\n            required,\r\n            minLength: minLength(1),\r\n            maxLength: maxLength(20)\r\n          }}\r\n        />\r\n        <Errors\r\n          className=\"search__error\"\r\n          model=\".query\"\r\n          show=\"touched\"\r\n          messages={{\r\n            required: \"Required. \",\r\n            minLength: \"Must be greater than 1 character\",\r\n            maxLength: \"Must be 20 characters or less\"\r\n          }}\r\n        />\r\n      </LocalForm>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default connect(null, null)(SearchForm);\r\n","import React from \"react\";\r\nimport \"./Preloader.css\";\r\n\r\nfunction Preloader({ text }) {\r\n  return (\r\n    <div className=\"preloader\">\r\n      <i className=\"circle-preloader\"></i>\r\n      {text && <p className=\"preloader__text\">Идет поиск книг...</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Preloader;\r\n","import React from \"react\";\r\nimport \"./ErrorText.css\";\r\n\r\nfunction ErrorText({ text }) {\r\n  return (\r\n    <div className=\"error\">\r\n      <div>{text}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ErrorText;\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport * as Image from '../../icons';\r\nimport { Preloader } from \"..\";\r\nimport \"./DetailedBookView.css\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        books: state.books.books,\r\n    };\r\n};\r\n\r\nfunction DetailedBookView({ books }) {\r\n    const { id } = useParams();\r\n    const book = books.find(item => item.key === `/works/${id}`)\r\n    const coverUrl = `http://covers.openlibrary.org/b/id/${book.cover_i}-L.jpg`;\r\n\r\n    const [isImageLoaded, setImageLoaded] = useState(false);\r\n\r\n    function handleImageLoaded() {\r\n        setImageLoaded(true);\r\n    }\r\n\r\n    return (\r\n        <div className=\"book\">\r\n            <div>\r\n                {!isImageLoaded && book.cover_i && <Preloader text={false} />}\r\n                {book.cover_i ? <img className=\"book__image\" onLoad={handleImageLoaded} src={coverUrl} alt=\"Обложка книги\" /> :\r\n                    <Image.NoPhotoIcon />}\r\n            </div>\r\n            <div className=\"book__text-group\">\r\n                <Link className=\"book__link\" to='/home'>На главную страницу</Link>\r\n                <p className=\"book__subtitle\">Название книги</p>\r\n                <h2 className=\"book__title\">{book.title}</h2>\r\n                <p className=\"book__subtitle\">Авторы книги</p>\r\n                {book.author_name &&\r\n                    <ul className=\"book__list\">\r\n                        {book.author_name.map((item, index) =>\r\n                            <li className=\"book__list-item\" key={index}>\r\n                                <p className=\"book__text\">{item}</p>\r\n                            </li>)}\r\n                    </ul>}\r\n                <p className=\"book__subtitle\">Год публикации</p>\r\n                <p className=\"book__text\">{book.first_publish_year}</p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps)(DetailedBookView);","import { Provider } from \"react-redux\";\nimport { store } from \"./redux/configureStore\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport { Home, DetailedBookView } from \"./components\";\nimport \"./styles.css\";\n\nexport default function App() {\n  window.onerror((err) => console.log(err));\n  \n  return (\n    <div className=\"page\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/home\" component={Home} />\n            <Route path=\"/book/:id\" component={DetailedBookView} />\n            <Redirect to=\"/home\" />\n          </Switch>\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n","import { Fragment } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <Fragment>\n    <App />\n  </Fragment>,\n  rootElement\n);\n\nserviceWorkerRegistration.register();"],"sourceRoot":""}